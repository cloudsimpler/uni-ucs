import { getDeepProperty } from "./utssdk/deep.uts";
import share from "./utssdk/share.uts";

class ucsShare {
	static getState(key : string, path : string = "") : any {
		return getData(key, path);
	};
	static setState(key : string, value : any) : void {
		setData(key, value);
	};

	static getStore(key : string, path : string = "") : any {
		return getStorageSync(key, path);
	};
	static setStore(key : string, value : any) : void {
		setData(key, value);
		uni.setStorageSync(key, value);
	};
	
	static removeStore(key : string) : void {
		
	};
};

function getStorageSync(key : string, path : string = "") : any {
	const temp = uni.getStorageSync(key);

	if (temp == "" || getData(key) != "") {
		return getData(key, path);
	} else {
		if (path != "") {
			if (typeof temp === 'object') {
				try {
					return getDeepProperty(temp as any, path);
				} catch (e) {
					return "";
				};
			};
		};
	};
	return temp as any;
};

function getData(key : string, path : string = "") : any {
	if (share[key] == null || share[key] == "") {
		return "";
	};
	// #ifndef APP-ANDROID 
	if (share[key] == undefined) {
		return "";
	};
	// #endif

	if (path != "") {
		if (typeof share[key] === 'object') {
			try {
				return getDeepProperty(share[key] as any, path);
			} catch (e) {
				return "";
			};
		};
	};
	return share[key] as any;
};

function setData(key : string, value : any) : void {
	share[key] = value;
};

const mixinStore =
	// #ifdef UNI-APP-X
	defineMixin(
		// #endif
		{
			methods: {
				getState(key : string, path : string = "") : any {
					return ucsShare.getState(key, path);
				},
				setState(key : string, value : any) : void {
					ucsShare.setState(key, value);
				},
				getStore(key : string, path : string = "") : any {
					return ucsShare.getStore(key, path);
				},
				setStore(key : string, value : any) : void {
					ucsShare.setStore(key, value);
				}
			}
		}
		// #ifdef UNI-APP-X
	);
// #endif
export {
	ucsShare,
	mixinStore
}