import { getDeepProperty } from "./utssdk/deep.uts";
import { reactive } from "vue";
const vuex = reactive({});

class useStore {
	static getState(key : string, path : string = "") : any {
		return getData(key, path);
	};
	static setState(key : string, value : any) : void {
		setData(key, value);
	};

	static getStore(key : string) : any {
		return getStorageSync(key);
	};
	static setStore(key : string, value : any) : void {
		setData(key, value);
		uni.setStorageSync(key, value);
	};
};

function getStorageSync(key : string) : any {
	const temp = uni.getStorageSync(key);

	if (temp == "" || getData(key) != "") {
		return getData(key);
	} else {
		return temp as any;
	}
};



function getData(key : string, path : string = "") : any {
	if (vuex[key] == null || vuex[key] == "") {
		return "";
	};
	// #ifndef APP-ANDROID 
	if (vuex[key] == undefined) {
		return "";
	};
	// #endif

	if (path != "") {
		if (typeof vuex[key] === 'object') {
			try {
				return getDeepProperty(vuex[key] as any, path);
			} catch (e) {
				return "";
			};
		};
	};

	return vuex[key] as any;
};

function setData(key : string, value : any) : void {
	vuex[key] = value;
};

const mixinStore =
	// #ifdef UNI-APP-X
	defineMixin(
		// #endif
		{
			methods: {
				getState(key : string) : any {
					return useStore.getState(key);
				},
				setState(key : string, value : any) : void {
					useStore.setState(key, value);
				},
				getStore(key : string) : any {
					return useStore.getStore(key);
				},
				setStore(key : string, value : any) : void {
					useStore.setStore(key, value);
				}
			}
		}
		// #ifdef UNI-APP-X
	);
// #endif
export {
	useStore,
	mixinStore
}