import { reactive } from "vue";
const defaultConfig = reactive({
	osTheme: "light",
	color: {
		primary: "#604CFC",
		success: "#07C160",
		warning: "#EDA20C",
		danger: "#D9514C"
	}
});

/**
 * object深度合并
 * @param first 原始object数据
 * @param second 需要被合并的object数据
 * @returns object
 */

let deepMergeObject : ((first : UTSJSONObject, second : UTSJSONObject) => void) | null = null;

deepMergeObject = (first : UTSJSONObject, second : UTSJSONObject) => {
	for (let f in first) {
		if (second.hasOwnProperty(f)) {
			if (typeof first[f] === 'object' && !Array.isArray(first[f]) && first[f] != null && typeof second[f] === 'object' && !Array.isArray(second[f]) && second[f] != null) {
				deepMergeObject?.(first[f] as UTSJSONObject, second[f] as UTSJSONObject);
			} else {
				if (typeof first[f] === typeof second[f] && second[f] != null) {
					first[f] = second[f];
				};
			}
		};
	};
};

/**
 * 定义配置
 * @param config 配置object
 */
const defineConfig = (config : UTSJSONObject) => {
	deepMergeObject?.(defaultConfig, config);
};

export {
	defineConfig, defaultConfig
}